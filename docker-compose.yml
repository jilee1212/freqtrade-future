# Freqtrade Futures Trading Bot - Docker Compose
# Phase 8: Multi-Service Container Orchestration

version: '3.8'

services:
  # Main Trading Bot
  freqtrade-bot:
    build: .
    container_name: freqtrade-futures-bot
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./logs:/freqtrade/logs
    environment:
      - FREQTRADE_USERDIR=/freqtrade/user_data
      - PYTHONPATH=/freqtrade
    command: >
      freqtrade trade
      --config user_data/config_futures.json
      --strategy AdvancedFuturesStrategy
      --logfile logs/freqtrade.log
    networks:
      - futures-network
    depends_on:
      - redis
      - prometheus

  # Web Dashboard
  web-dashboard:
    build: .
    container_name: futures-web-dashboard
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./web_dashboard:/freqtrade/web_dashboard
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/freqtrade
    command: python web_dashboard/app.py
    networks:
      - futures-network
    depends_on:
      - freqtrade-bot

  # Real-time Monitor
  real-time-monitor:
    build: .
    container_name: futures-monitor
    restart: unless-stopped
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./logs:/freqtrade/logs
    environment:
      - PYTHONPATH=/freqtrade
    command: python real_time_monitor.py
    networks:
      - futures-network
    depends_on:
      - freqtrade-bot

  # Redis for Session Management
  redis:
    image: redis:7-alpine
    container_name: futures-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - futures-network

  # Prometheus for Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: futures-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - futures-network

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: futures-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=futures2024
    networks:
      - futures-network
    depends_on:
      - prometheus

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: futures-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - futures-network
    depends_on:
      - web-dashboard
      - grafana

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  futures-network:
    driver: bridge